{
  "signature": "sec:1:profile:auto",
  "files": {
    "jest.config.js": {
      "hash": "bad4920e99f70aeee5cbec013467093f55aa71ee3746bcbe7ea4e53206bcff54",
      "results": []
    },
    "src/index.ts": {
      "hash": "50051d7fbad922d800473b67b4b25c513e3ca60b3dcaf08760134bce5a6b8d53",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 182,
          "range": {
            "startLine": 182,
            "startColumn": 1,
            "endLine": 182,
            "endColumn": 219
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 182,
              "startColumn": 1,
              "endLine": 182,
              "endColumn": 219,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 185,
          "range": {
            "startLine": 185,
            "startColumn": 1,
            "endLine": 185,
            "endColumn": 132
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 185,
              "startColumn": 1,
              "endLine": 185,
              "endColumn": 132,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 197,
          "range": {
            "startLine": 197,
            "startColumn": 1,
            "endLine": 197,
            "endColumn": 95
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 197,
              "startColumn": 1,
              "endLine": 197,
              "endColumn": 95,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 200,
          "range": {
            "startLine": 200,
            "startColumn": 1,
            "endLine": 200,
            "endColumn": 35
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 200,
              "startColumn": 1,
              "endLine": 200,
              "endColumn": 35,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 208,
          "range": {
            "startLine": 208,
            "startColumn": 1,
            "endLine": 208,
            "endColumn": 71
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 208,
              "startColumn": 1,
              "endLine": 208,
              "endColumn": 71,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 228,
          "range": {
            "startLine": 228,
            "startColumn": 1,
            "endLine": 228,
            "endColumn": 136
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 228,
              "startColumn": 1,
              "endLine": 228,
              "endColumn": 136,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 231,
          "range": {
            "startLine": 231,
            "startColumn": 1,
            "endLine": 231,
            "endColumn": 93
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 231,
              "startColumn": 1,
              "endLine": 231,
              "endColumn": 93,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 236,
          "range": {
            "startLine": 236,
            "startColumn": 1,
            "endLine": 236,
            "endColumn": 140
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 236,
              "startColumn": 1,
              "endLine": 236,
              "endColumn": 140,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 243,
          "range": {
            "startLine": 243,
            "startColumn": 1,
            "endLine": 243,
            "endColumn": 116
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 243,
              "startColumn": 1,
              "endLine": 243,
              "endColumn": 116,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 251,
          "range": {
            "startLine": 251,
            "startColumn": 1,
            "endLine": 251,
            "endColumn": 82
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 251,
              "startColumn": 1,
              "endLine": 251,
              "endColumn": 82,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 257,
          "range": {
            "startLine": 257,
            "startColumn": 1,
            "endLine": 257,
            "endColumn": 150
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 257,
              "startColumn": 1,
              "endLine": 257,
              "endColumn": 150,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 259,
          "range": {
            "startLine": 259,
            "startColumn": 1,
            "endLine": 259,
            "endColumn": 68
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 259,
              "startColumn": 1,
              "endLine": 259,
              "endColumn": 68,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/index.ts",
          "line": 392,
          "range": {
            "startLine": 392,
            "startColumn": 1,
            "endLine": 392,
            "endColumn": 186
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/index.ts",
              "startLine": 392,
              "startColumn": 1,
              "endLine": 392,
              "endColumn": 186,
              "replacement": ""
            }
          ]
        }
      ]
    },
    "src/cli.ts": {
      "hash": "161ad000b75165a76d1b5b6334c78f2386e830ba629a48a88d22c451cd986795",
      "results": [
        {
          "type": "error",
          "category": "security",
          "message": "Potential API key or secret token exposed",
          "file": "src/cli.ts",
          "line": 41,
          "range": {
            "startLine": 41,
            "startColumn": 1,
            "endLine": 41,
            "endColumn": 103
          },
          "match": "'sk-********'",
          "severity": "high",
          "ruleId": "SEC001",
          "confidence": 0.9,
          "fix": "Move sensitive keys to environment variables"
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 200,
          "range": {
            "startLine": 200,
            "startColumn": 1,
            "endLine": 200,
            "endColumn": 24
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 200,
              "startColumn": 1,
              "endLine": 200,
              "endColumn": 24,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 219,
          "range": {
            "startLine": 219,
            "startColumn": 1,
            "endLine": 219,
            "endColumn": 56
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 219,
              "startColumn": 1,
              "endLine": 219,
              "endColumn": 56,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 230,
          "range": {
            "startLine": 230,
            "startColumn": 1,
            "endLine": 230,
            "endColumn": 64
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 230,
              "startColumn": 1,
              "endLine": 230,
              "endColumn": 64,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 237,
          "range": {
            "startLine": 237,
            "startColumn": 1,
            "endLine": 237,
            "endColumn": 110
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 237,
              "startColumn": 1,
              "endLine": 237,
              "endColumn": 110,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 239,
          "range": {
            "startLine": 239,
            "startColumn": 1,
            "endLine": 239,
            "endColumn": 115
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 239,
              "startColumn": 1,
              "endLine": 239,
              "endColumn": 115,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 248,
          "range": {
            "startLine": 248,
            "startColumn": 1,
            "endLine": 248,
            "endColumn": 54
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 248,
              "startColumn": 1,
              "endLine": 248,
              "endColumn": 54,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 250,
          "range": {
            "startLine": 250,
            "startColumn": 1,
            "endLine": 250,
            "endColumn": 57
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 250,
              "startColumn": 1,
              "endLine": 250,
              "endColumn": 57,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 281,
          "range": {
            "startLine": 281,
            "startColumn": 1,
            "endLine": 281,
            "endColumn": 50
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 281,
              "startColumn": 1,
              "endLine": 281,
              "endColumn": 50,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 288,
          "range": {
            "startLine": 288,
            "startColumn": 1,
            "endLine": 288,
            "endColumn": 107
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 288,
              "startColumn": 1,
              "endLine": 288,
              "endColumn": 107,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 290,
          "range": {
            "startLine": 290,
            "startColumn": 1,
            "endLine": 290,
            "endColumn": 87
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 290,
              "startColumn": 1,
              "endLine": 290,
              "endColumn": 87,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 297,
          "range": {
            "startLine": 297,
            "startColumn": 1,
            "endLine": 297,
            "endColumn": 82
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 297,
              "startColumn": 1,
              "endLine": 297,
              "endColumn": 82,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 299,
          "range": {
            "startLine": 299,
            "startColumn": 1,
            "endLine": 299,
            "endColumn": 47
          },
          "match": "console.error(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 299,
              "startColumn": 1,
              "endLine": 299,
              "endColumn": 47,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 398,
          "range": {
            "startLine": 398,
            "startColumn": 1,
            "endLine": 398,
            "endColumn": 24
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 398,
              "startColumn": 1,
              "endLine": 398,
              "endColumn": 24,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 417,
          "range": {
            "startLine": 417,
            "startColumn": 1,
            "endLine": 417,
            "endColumn": 56
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 417,
              "startColumn": 1,
              "endLine": 417,
              "endColumn": 56,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 427,
          "range": {
            "startLine": 427,
            "startColumn": 1,
            "endLine": 427,
            "endColumn": 64
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 427,
              "startColumn": 1,
              "endLine": 427,
              "endColumn": 64,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 433,
          "range": {
            "startLine": 433,
            "startColumn": 1,
            "endLine": 433,
            "endColumn": 110
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 433,
              "startColumn": 1,
              "endLine": 433,
              "endColumn": 110,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 435,
          "range": {
            "startLine": 435,
            "startColumn": 1,
            "endLine": 435,
            "endColumn": 115
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 435,
              "startColumn": 1,
              "endLine": 435,
              "endColumn": 115,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 447,
          "range": {
            "startLine": 447,
            "startColumn": 1,
            "endLine": 447,
            "endColumn": 82
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 447,
              "startColumn": 1,
              "endLine": 447,
              "endColumn": 82,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 449,
          "range": {
            "startLine": 449,
            "startColumn": 1,
            "endLine": 449,
            "endColumn": 55
          },
          "match": "console.error(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 449,
              "startColumn": 1,
              "endLine": 449,
              "endColumn": 55,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 464,
          "range": {
            "startLine": 464,
            "startColumn": 1,
            "endLine": 464,
            "endColumn": 67
          },
          "match": "console.error(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 464,
              "startColumn": 1,
              "endLine": 464,
              "endColumn": 67,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 478,
          "range": {
            "startLine": 478,
            "startColumn": 1,
            "endLine": 478,
            "endColumn": 55
          },
          "match": "console.error(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 478,
              "startColumn": 1,
              "endLine": 478,
              "endColumn": 55,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 495,
          "range": {
            "startLine": 495,
            "startColumn": 1,
            "endLine": 495,
            "endColumn": 51
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 495,
              "startColumn": 1,
              "endLine": 495,
              "endColumn": 51,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 498,
          "range": {
            "startLine": 498,
            "startColumn": 1,
            "endLine": 498,
            "endColumn": 54
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 498,
              "startColumn": 1,
              "endLine": 498,
              "endColumn": 54,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 503,
          "range": {
            "startLine": 503,
            "startColumn": 1,
            "endLine": 503,
            "endColumn": 53
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 503,
              "startColumn": 1,
              "endLine": 503,
              "endColumn": 53,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 504,
          "range": {
            "startLine": 504,
            "startColumn": 1,
            "endLine": 504,
            "endColumn": 62
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 504,
              "startColumn": 1,
              "endLine": 504,
              "endColumn": 62,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 505,
          "range": {
            "startLine": 505,
            "startColumn": 1,
            "endLine": 505,
            "endColumn": 64
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 505,
              "startColumn": 1,
              "endLine": 505,
              "endColumn": 64,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/cli.ts",
          "line": 507,
          "range": {
            "startLine": 507,
            "startColumn": 1,
            "endLine": 507,
            "endColumn": 55
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/cli.ts",
              "startLine": 507,
              "startColumn": 1,
              "endLine": 507,
              "endColumn": 55,
              "replacement": ""
            }
          ]
        }
      ]
    },
    "scripts/generate-rules-md.js": {
      "hash": "3fc82c7156cc5c18734bdc83a66922243bbb0d09c9df96630805b865053deeb4",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "scripts/generate-rules-md.js",
          "line": 8,
          "range": {
            "startLine": 8,
            "startColumn": 1,
            "endLine": 8,
            "endColumn": 77
          },
          "match": "console.error(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "scripts/generate-rules-md.js",
              "startLine": 8,
              "startColumn": 1,
              "endLine": 8,
              "endColumn": 77,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "scripts/generate-rules-md.js",
          "line": 62,
          "range": {
            "startLine": 62,
            "startColumn": 1,
            "endLine": 62,
            "endColumn": 56
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "scripts/generate-rules-md.js",
              "startLine": 62,
              "startColumn": 1,
              "endLine": 62,
              "endColumn": 56,
              "replacement": ""
            }
          ]
        }
      ]
    },
    "scripts/check-changelog.js": {
      "hash": "b5b12dc30cc814abd4e932b296b5c174ed4815d06eeb6ec1591fa5a121a77045",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "scripts/check-changelog.js",
          "line": 15,
          "range": {
            "startLine": 15,
            "startColumn": 1,
            "endLine": 15,
            "endColumn": 96
          },
          "match": "console.error(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "scripts/check-changelog.js",
              "startLine": 15,
              "startColumn": 1,
              "endLine": 15,
              "endColumn": 96,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "scripts/check-changelog.js",
          "line": 16,
          "range": {
            "startLine": 16,
            "startColumn": 1,
            "endLine": 16,
            "endColumn": 98
          },
          "match": "console.error(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "scripts/check-changelog.js",
              "startLine": 16,
              "startColumn": 1,
              "endLine": 16,
              "endColumn": 98,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "scripts/check-changelog.js",
          "line": 19,
          "range": {
            "startLine": 19,
            "startColumn": 1,
            "endLine": 19,
            "endColumn": 76
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "scripts/check-changelog.js",
              "startLine": 19,
              "startColumn": 1,
              "endLine": 19,
              "endColumn": 76,
              "replacement": ""
            }
          ]
        }
      ]
    },
    "coverage/sorter.js": {
      "hash": "f8cc5d157379d844fd695ad567b6c29b3c1f0812964ddf6f95c26327e434bab5",
      "results": []
    },
    "coverage/prettify.js": {
      "hash": "fa1b1e1b906ddcfa08b46f161c0f924f506e1a31b4f3e09b8caaa2463ef52c18",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "coverage/prettify.js",
          "line": 2,
          "range": {
            "startLine": 2,
            "startColumn": 1,
            "endLine": 2,
            "endColumn": 17568
          },
          "match": "console.warn(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "coverage/prettify.js",
              "startLine": 2,
              "startColumn": 1,
              "endLine": 2,
              "endColumn": 17568,
              "replacement": ""
            }
          ]
        }
      ]
    },
    "coverage/block-navigation.js": {
      "hash": "cd8db34b1fbeb973354a93f8b4133c7c7eab34cdda9429a0434be91384783b7e",
      "results": []
    },
    "vscode-extension/src/extension.ts": {
      "hash": "1fc43872de52fc7328ac0ae449808f6f6af6f845f740b8f5e219a6becd768189",
      "results": [
        {
          "type": "error",
          "category": "security",
          "message": "Potential API key or secret token exposed",
          "file": "vscode-extension/src/extension.ts",
          "line": 108,
          "range": {
            "startLine": 108,
            "startColumn": 1,
            "endLine": 108,
            "endColumn": 60
          },
          "match": "'sk-********'",
          "severity": "high",
          "ruleId": "SEC001",
          "confidence": 0.9,
          "fix": "Move sensitive keys to environment variables"
        }
      ]
    },
    "src/utils/suppressions.ts": {
      "hash": "2a3e0ce2a78b59441a78e8878d937fa0dd63db25b46bc9b941b42eb57318d79e",
      "results": []
    },
    "src/utils/sarif.ts": {
      "hash": "fc497215988c1c2ea63e24831a72cb66da5591661b7e3f2aa0bb04586ba53df7",
      "results": [
        {
          "type": "error",
          "category": "security",
          "message": "Potential API key or secret token exposed",
          "file": "src/utils/sarif.ts",
          "line": 102,
          "range": {
            "startLine": 102,
            "startColumn": 1,
            "endLine": 102,
            "endColumn": 103
          },
          "match": "'sk-********'",
          "severity": "high",
          "ruleId": "SEC001",
          "confidence": 0.9,
          "fix": "Move sensitive keys to environment variables"
        }
      ]
    },
    "src/utils/result-cache.ts": {
      "hash": "02a090891763eacd3e63c2e2d84faa5bed8bbeb584aac452832d422c9becdca1",
      "results": []
    },
    "src/utils/logger.ts": {
      "hash": "ad90ee56d0b556aaefbecb39667489420dc582d584b1922676a6522bb4f5be9b",
      "results": []
    },
    "src/utils/init.ts": {
      "hash": "76f80d3767fcf0f0f34a329e0c68f6550a750a2f73f2952b08ed8e2a1ba451bb",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/utils/init.ts",
          "line": 16,
          "range": {
            "startLine": 16,
            "startColumn": 1,
            "endLine": 16,
            "endColumn": 41
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/utils/init.ts",
              "startLine": 16,
              "startColumn": 1,
              "endLine": 16,
              "endColumn": 41,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/utils/init.ts",
          "line": 23,
          "range": {
            "startLine": 23,
            "startColumn": 1,
            "endLine": 23,
            "endColumn": 46
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/utils/init.ts",
              "startLine": 23,
              "startColumn": 1,
              "endLine": 23,
              "endColumn": 46,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/utils/init.ts",
          "line": 24,
          "range": {
            "startLine": 24,
            "startColumn": 1,
            "endLine": 24,
            "endColumn": 57
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/utils/init.ts",
              "startLine": 24,
              "startColumn": 1,
              "endLine": 24,
              "endColumn": 57,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/utils/init.ts",
          "line": 25,
          "range": {
            "startLine": 25,
            "startColumn": 1,
            "endLine": 25,
            "endColumn": 82
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/utils/init.ts",
              "startLine": 25,
              "startColumn": 1,
              "endLine": 25,
              "endColumn": 82,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/utils/init.ts",
          "line": 26,
          "range": {
            "startLine": 26,
            "startColumn": 1,
            "endLine": 26,
            "endColumn": 129
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/utils/init.ts",
              "startLine": 26,
              "startColumn": 1,
              "endLine": 26,
              "endColumn": 129,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/utils/init.ts",
          "line": 27,
          "range": {
            "startLine": 27,
            "startColumn": 1,
            "endLine": 27,
            "endColumn": 117
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/utils/init.ts",
              "startLine": 27,
              "startColumn": 1,
              "endLine": 27,
              "endColumn": 117,
              "replacement": ""
            }
          ]
        }
      ]
    },
    "src/utils/hooks.ts": {
      "hash": "ddc3f13e4e5c0b2e5d449e8aa5ba731b712789ec725006df7ddf4a23827e64dc",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/utils/hooks.ts",
          "line": 21,
          "range": {
            "startLine": 21,
            "startColumn": 1,
            "endLine": 21,
            "endColumn": 51
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/utils/hooks.ts",
              "startLine": 21,
              "startColumn": 1,
              "endLine": 21,
              "endColumn": 51,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/utils/hooks.ts",
          "line": 26,
          "range": {
            "startLine": 26,
            "startColumn": 1,
            "endLine": 26,
            "endColumn": 86
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/utils/hooks.ts",
              "startLine": 26,
              "startColumn": 1,
              "endLine": 26,
              "endColumn": 86,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/utils/hooks.ts",
          "line": 27,
          "range": {
            "startLine": 27,
            "startColumn": 1,
            "endLine": 27,
            "endColumn": 48
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/utils/hooks.ts",
              "startLine": 27,
              "startColumn": 1,
              "endLine": 27,
              "endColumn": 48,
              "replacement": ""
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/utils/hooks.ts",
          "line": 32,
          "range": {
            "startLine": 32,
            "startColumn": 1,
            "endLine": 32,
            "endColumn": 64
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/utils/hooks.ts",
              "startLine": 32,
              "startColumn": 1,
              "endLine": 32,
              "endColumn": 64,
              "replacement": ""
            }
          ]
        }
      ]
    },
    "src/utils/git.ts": {
      "hash": "dd8b4fa9da4a97c101d78e2cdcc6bb159f7a705ea91705ee37422356f29c8095",
      "results": []
    },
    "src/utils/fix.ts": {
      "hash": "8ff35c4e27632444abdead79bcfcf94908f4b2e4ea603f185890e52868e40faa",
      "results": []
    },
    "src/utils/entropy.ts": {
      "hash": "75897dbb409ad589819dd0b61155a31cce69e94a46b2e99a9f399046b9a00803",
      "results": []
    },
    "src/utils/config.ts": {
      "hash": "33dab748008fe514f7f4c13765825a3e995c504b3a30fef414d206569204bd03",
      "results": []
    },
    "src/utils/cache.ts": {
      "hash": "16aead1783c12a9b81f7af04c292cfa7e3a3e2cb0e2a96b3368afe74d2cf6fa4",
      "results": []
    },
    "src/types/rules.ts": {
      "hash": "78570e57a329302f8524ce13385e3a052690f20eefd2c4dd8ff39638ad4d0aa9",
      "results": []
    },
    "src/types/index.ts": {
      "hash": "26b0bb9fff2aaf23ee4cc47db5b325fb689dcdd06a33fd7aa7deaafe76fea02b",
      "results": []
    },
    "src/scanners/security-scanner.ts": {
      "hash": "cf7babd9b9e48a7e83345940342d221e8f76d3ed8da300d35f76f78f6b702482",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "HTTP request without timeout/retry policy",
          "file": "src/scanners/security-scanner.ts",
          "line": 344,
          "range": {
            "startLine": 344,
            "startColumn": 1,
            "endLine": 344,
            "endColumn": 88
          },
          "severity": "medium",
          "ruleId": "JSNET001",
          "match": "            const suggested = line.replace(/fetch\\(([^)]*)\\)/, 'fetch($1, { signal })');",
          "confidence": 0.6,
          "fix": "Use AbortController with a timeout to cancel long fetches",
          "fixEdits": [
            {
              "file": "src/scanners/security-scanner.ts",
              "startLine": 344,
              "startColumn": 1,
              "endLine": 344,
              "endColumn": 88,
              "replacement": "            const suggested = line.replace(/fetch\\(([^)]*)\\)/, 'fetch($1, { signal }, { signal })');"
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Set-Cookie missing HttpOnly/Secure/SameSite",
          "file": "src/scanners/security-scanner.ts",
          "line": 369,
          "range": {
            "startLine": 369,
            "startColumn": 1,
            "endLine": 369,
            "endColumn": 120
          },
          "severity": "medium",
          "ruleId": "COOKIE001",
          "match": "          if (/setHeader\\(\\s*['\"][Ss]et-[Cc]ookie['\"],\\s*['\"][^'\"]+['\"]\\s*\\)/.test(line) || /Set-Cookie:/i.test(line)) {",
          "confidence": 0.8,
          "fix": "Add HttpOnly; Secure; SameSite=Lax (or Strict) to cookies",
          "fixEdits": [
            {
              "file": "src/scanners/security-scanner.ts",
              "startLine": 369,
              "startColumn": 1,
              "endLine": 369,
              "endColumn": 120,
              "replacement": "          if (/setHeader\\(\\s*['\"][Ss]et-[Cc]ookie['\"],\\s*['\"][^'\"]+['\"]\\s*\\)/.test(line) || /Set-Cookie:/i.test(line)) {"
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Set-Cookie missing HttpOnly/Secure/SameSite",
          "file": "src/scanners/security-scanner.ts",
          "line": 370,
          "range": {
            "startLine": 370,
            "startColumn": 1,
            "endLine": 370,
            "endColumn": 83
          },
          "severity": "medium",
          "ruleId": "COOKIE001",
          "match": "            const cookieStrMatch = line.match(/Set-Cookie:\\s*([^;]+(?:;[^;]+)*)/i);",
          "confidence": 0.8,
          "fix": "Add HttpOnly; Secure; SameSite=Lax (or Strict) to cookies",
          "fixEdits": [
            {
              "file": "src/scanners/security-scanner.ts",
              "startLine": 370,
              "startColumn": 1,
              "endLine": 370,
              "endColumn": 83,
              "replacement": "            const cookieStrMatch = line.match(/Set-Cookie:\\s*([^;]+(?:;[^;]+)*)/i);"
            }
          ]
        }
      ]
    },
    "src/scanners/rails-security-scanner.ts": {
      "hash": "469063e8789f745d4a513ab41ced941a0d759c094f93cdab3deda987bc0af6d1",
      "results": []
    },
    "src/scanners/python-security-scanner.ts": {
      "hash": "5975444e9b024e797ee8a09c68aa76cdbe2abcd891afbfe68dfa8d58f26038cc",
      "results": []
    },
    "src/scanners/osv-scanner.ts": {
      "hash": "14f5514f54251bdca862c8fc86381c1b02fbcd0c1d3a1b05764c32026ba1d254",
      "results": []
    },
    "src/scanners/link-scanner.ts": {
      "hash": "7eea14bf39c3b0a1df3066378f716573447df0f5b725868a927930ff6ec80043",
      "results": []
    },
    "src/scanners/internal-crawler.ts": {
      "hash": "d29ff313d6e6b92a210fbe0d3fc657a4887bf9bd9cdddc990712d01fd5170240",
      "results": [
        {
          "type": "error",
          "category": "security",
          "message": "Use of eval() detected (security risk)",
          "file": "src/scanners/internal-crawler.ts",
          "line": 48,
          "range": {
            "startLine": 48,
            "startColumn": 1,
            "endLine": 48,
            "endColumn": 116
          },
          "match": "eval(",
          "severity": "high",
          "ruleId": "SEC016",
          "confidence": 0.9,
          "fix": "Replace eval() with safer alternatives"
        }
      ]
    },
    "src/scanners/iac-scanner.ts": {
      "hash": "a754e6ae2dcf0ac83bbd0785adfe50a177719ffd47dd014ebc3de1979314416a",
      "results": []
    },
    "src/scanners/git-history-scanner.ts": {
      "hash": "e3fdc30750a97471a35a50ad9e5b6b0cd77d4cdac48aee5f7994214a55341acb",
      "results": []
    },
    "src/scanners/env-scanner.ts": {
      "hash": "61346a7909ef9ab9d68d9822034c87eb8d94a401ed1877c4c126ccb09ec53cee",
      "results": []
    },
    "src/scanners/ast-security-scanner.ts": {
      "hash": "8f7d34e90647604e5e2006ab067ba1d489e2478c0a5ffce66a9c1ae30d265926",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "HTTP request without timeout/retry policy",
          "file": "src/scanners/ast-security-scanner.ts",
          "line": 81,
          "range": {
            "startLine": 81,
            "startColumn": 1,
            "endLine": 81,
            "endColumn": 23
          },
          "severity": "medium",
          "ruleId": "JSNET001",
          "match": "          // fetch(...)",
          "confidence": 0.6,
          "fix": "Use AbortController with a timeout to cancel long fetches",
          "fixEdits": [
            {
              "file": "src/scanners/ast-security-scanner.ts",
              "startLine": 81,
              "startColumn": 1,
              "endLine": 81,
              "endColumn": 23,
              "replacement": "          // fetch(..., { signal })"
            }
          ]
        }
      ]
    },
    "src/scanners/accessibility-scanner.ts": {
      "hash": "fe223803e58e38a0bf227f12c8a172399d2c54d6e482abf8aed85fcfb4998b3c",
      "results": []
    },
    "src/__tests__/suppressions.test.ts": {
      "hash": "de75b2c049658ff1309ddd14a4c3c8b5e2826f357b92028b9759fdecd50a849a",
      "results": []
    },
    "src/__tests__/scanners.test.ts": {
      "hash": "ad307319e341c5fe80946c7e38ed213829d222c128ce13fe819c3d8d4b6cf13f",
      "results": [
        {
          "type": "error",
          "category": "security",
          "message": "Potential API key or secret token exposed",
          "file": "src/__tests__/scanners.test.ts",
          "line": 21,
          "range": {
            "startLine": 21,
            "startColumn": 1,
            "endLine": 21,
            "endColumn": 91
          },
          "match": "\"sk-test_abcdefghijklmnopqrstuvwxyz0123456789\"",
          "severity": "high",
          "ruleId": "SEC001",
          "confidence": 0.9,
          "fix": "Move sensitive keys to environment variables"
        },
        {
          "type": "error",
          "category": "security",
          "message": "High-entropy string literal (possible secret)",
          "file": "src/__tests__/scanners.test.ts",
          "line": 21,
          "range": {
            "startLine": 21,
            "startColumn": 1,
            "endLine": 21,
            "endColumn": 91
          },
          "severity": "high",
          "ruleId": "SEC018",
          "match": "sk-test_abcdefghijklmnopqrstuvwxyz0123456789",
          "confidence": 0.9,
          "fix": "Move secrets to environment variables; rotate credentials"
        }
      ]
    },
    "src/__tests__/rules-misc.test.ts": {
      "hash": "21cad87c18f7d99532bf861c8ec6435312ceac2909c441e7a560e75c39afa9a7",
      "results": [
        {
          "type": "error",
          "category": "security",
          "message": "Potential API key or secret token exposed",
          "file": "src/__tests__/rules-misc.test.ts",
          "line": 13,
          "range": {
            "startLine": 13,
            "startColumn": 1,
            "endLine": 13,
            "endColumn": 55
          },
          "match": "'sk-TESTSECRET'",
          "severity": "high",
          "ruleId": "SEC001",
          "confidence": 0.9,
          "fix": "Move sensitive keys to environment variables"
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/__tests__/rules-misc.test.ts",
          "line": 13,
          "range": {
            "startLine": 13,
            "startColumn": 1,
            "endLine": 13,
            "endColumn": 55
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/__tests__/rules-misc.test.ts",
              "startLine": 13,
              "startColumn": 1,
              "endLine": 13,
              "endColumn": 55,
              "replacement": ""
            }
          ]
        },
        {
          "type": "error",
          "category": "security",
          "message": "Potential API key or secret token exposed",
          "file": "src/__tests__/rules-misc.test.ts",
          "line": 39,
          "range": {
            "startLine": 39,
            "startColumn": 1,
            "endLine": 39,
            "endColumn": 121
          },
          "match": "'sk-1234567890abcdefZZZZ'",
          "severity": "high",
          "ruleId": "SEC001",
          "confidence": 0.9,
          "fix": "Move sensitive keys to environment variables"
        },
        {
          "type": "error",
          "category": "security",
          "message": "High-entropy string literal (possible secret)",
          "file": "src/__tests__/rules-misc.test.ts",
          "line": 39,
          "range": {
            "startLine": 39,
            "startColumn": 1,
            "endLine": 39,
            "endColumn": 121
          },
          "severity": "high",
          "ruleId": "SEC018",
          "match": "sk-1234567890abcdefZZZZ",
          "confidence": 0.9,
          "fix": "Move secrets to environment variables; rotate credentials"
        },
        {
          "type": "error",
          "category": "security",
          "message": "High-entropy string literal (possible secret)",
          "file": "src/__tests__/rules-misc.test.ts",
          "line": 39,
          "range": {
            "startLine": 39,
            "startColumn": 1,
            "endLine": 39,
            "endColumn": 121
          },
          "severity": "high",
          "ruleId": "SEC018",
          "match": "eyJhbGciOiJIUzI1NiIs.eyJzdWIiOiIx",
          "confidence": 0.9,
          "fix": "Move secrets to environment variables; rotate credentials"
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Potential secret logged to console/logger",
          "file": "src/__tests__/rules-misc.test.ts",
          "line": 13,
          "range": {
            "startLine": 13,
            "startColumn": 1,
            "endLine": 13,
            "endColumn": 55
          },
          "severity": "medium",
          "ruleId": "LOG001",
          "confidence": 0.8,
          "fix": "Avoid logging secrets; redact values before logging",
          "fixEdits": [
            {
              "file": "src/__tests__/rules-misc.test.ts",
              "startLine": 13,
              "startColumn": 1,
              "endLine": 13,
              "endColumn": 55,
              "replacement": "    writeFileSync(fp, `console.log('sk-********');`);"
            }
          ]
        }
      ]
    },
    "src/__tests__/rails-scanner.test.ts": {
      "hash": "b717c88f0cc2ae995e7461914d2a9453a6844d5676cf94482edaa1efa8f2f693",
      "results": []
    },
    "src/__tests__/framework-rules.test.ts": {
      "hash": "83e617745ee0fbe68c482e4e56e3d90c24293351701e843b8061d3924d6cb87e",
      "results": [
        {
          "type": "error",
          "category": "security",
          "message": "Sensitive data exposed via getStaticProps/getServerSideProps",
          "file": "src/__tests__/framework-rules.test.ts",
          "severity": "high",
          "ruleId": "NEXT006",
          "confidence": 0.6,
          "fix": "Do not include secrets/env in returned props"
        }
      ]
    },
    "src/__tests__/format-and-cache.test.ts": {
      "hash": "638c3417a3dc1b1402d81c632de162d05a906cd252ac2857d5c47665e286b581",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/__tests__/format-and-cache.test.ts",
          "line": 51,
          "range": {
            "startLine": 51,
            "startColumn": 1,
            "endLine": 51,
            "endColumn": 56
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/__tests__/format-and-cache.test.ts",
              "startLine": 51,
              "startColumn": 1,
              "endLine": 51,
              "endColumn": 56,
              "replacement": ""
            }
          ]
        }
      ]
    },
    "src/__tests__/determinism.test.ts": {
      "hash": "060a9392472a57076a3de71a416e04924f358ff4408c5f4680725163fd9f621c",
      "results": []
    },
    "src/__tests__/core.test.ts": {
      "hash": "1458c706c9978cf8c83c3345832a80952821e00650e2e1967154e966311b5aab",
      "results": []
    },
    "src/__tests__/config.test.ts": {
      "hash": "dfcce4e3d66b174a5d0deff3ef4eb4ede0ef4c9bf78f1bffb5ab333c6c075560",
      "results": []
    },
    "src/__tests__/cli-smoke.test.ts": {
      "hash": "c79dd7bd88f997854731362ffba8cadc5058f6ea65a13923cf281211c1b8609c",
      "results": []
    },
    "src/__tests__/baseline.test.ts": {
      "hash": "590bc8f60d3de3ef96c76c86ab5282d0395e4456c9296d881d121c29ff5f5fae",
      "results": []
    },
    "src/__tests__/ast-scanner.test.ts": {
      "hash": "372409c12dcec0a4dbc633e70726687a94d95967eff62b18c6a3b3e8046d41f1",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "dangerouslySetInnerHTML usage (XSS risk)",
          "file": "src/__tests__/ast-scanner.test.ts",
          "line": 17,
          "range": {
            "startLine": 17,
            "startColumn": 1,
            "endLine": 17,
            "endColumn": 99
          },
          "match": "dangerouslySetInnerHTML",
          "severity": "medium",
          "ruleId": "SEC017",
          "confidence": 0.8,
          "fix": "Sanitize HTML content or use safer alternatives"
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "src/__tests__/ast-scanner.test.ts",
          "line": 21,
          "range": {
            "startLine": 21,
            "startColumn": 1,
            "endLine": 21,
            "endColumn": 29
          },
          "match": "console.log(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "src/__tests__/ast-scanner.test.ts",
              "startLine": 21,
              "startColumn": 1,
              "endLine": 21,
              "endColumn": 29,
              "replacement": ""
            }
          ]
        },
        {
          "type": "error",
          "category": "security",
          "message": "Use of eval() detected (security risk)",
          "file": "src/__tests__/ast-scanner.test.ts",
          "line": 21,
          "range": {
            "startLine": 21,
            "startColumn": 1,
            "endLine": 21,
            "endColumn": 29
          },
          "match": "eval(",
          "severity": "high",
          "ruleId": "SEC016",
          "confidence": 0.9,
          "fix": "Replace eval() with safer alternatives"
        },
        {
          "type": "warning",
          "category": "security",
          "message": "dangerouslySetInnerHTML usage (XSS risk)",
          "file": "src/__tests__/ast-scanner.test.ts",
          "line": 23,
          "range": {
            "startLine": 23,
            "startColumn": 1,
            "endLine": 23,
            "endColumn": 68
          },
          "match": "dangerouslySetInnerHTML",
          "severity": "medium",
          "ruleId": "SEC017",
          "confidence": 0.8,
          "fix": "Sanitize HTML content or use safer alternatives"
        },
        {
          "type": "warning",
          "category": "security",
          "message": "Environment variable with hardcoded fallback",
          "file": "src/__tests__/ast-scanner.test.ts",
          "line": 25,
          "range": {
            "startLine": 25,
            "startColumn": 1,
            "endLine": 25,
            "endColumn": 63
          },
          "match": "process.env.API_URL || 'https://example.com'",
          "severity": "medium",
          "ruleId": "SEC008",
          "confidence": 0.75,
          "fix": "Remove hardcoded fallback values",
          "fixEdits": [
            {
              "file": "src/__tests__/ast-scanner.test.ts",
              "startLine": 25,
              "startColumn": 1,
              "endLine": 25,
              "endColumn": 63,
              "replacement": "      const api = process.env.API_URL;"
            }
          ]
        },
        {
          "type": "warning",
          "category": "security",
          "message": "HTTP request without timeout/retry policy",
          "file": "src/__tests__/ast-scanner.test.ts",
          "line": 27,
          "range": {
            "startLine": 27,
            "startColumn": 1,
            "endLine": 27,
            "endColumn": 25
          },
          "severity": "medium",
          "ruleId": "JSNET001",
          "match": "      fetch('/api/data');",
          "confidence": 0.6,
          "fix": "Use AbortController with a timeout to cancel long fetches",
          "fixEdits": [
            {
              "file": "src/__tests__/ast-scanner.test.ts",
              "startLine": 27,
              "startColumn": 1,
              "endLine": 27,
              "endColumn": 25,
              "replacement": "      fetch('/api/data', { signal });"
            }
          ]
        }
      ]
    },
    "src/__tests__/ast-newrules.test.ts": {
      "hash": "7bfb7a352de9a3170cf03227d6b228cf1e9832ca0efb98250e065b375a28e7c6",
      "results": []
    },
    "coverage/lcov-report/sorter.js": {
      "hash": "f8cc5d157379d844fd695ad567b6c29b3c1f0812964ddf6f95c26327e434bab5",
      "results": []
    },
    "coverage/lcov-report/prettify.js": {
      "hash": "fa1b1e1b906ddcfa08b46f161c0f924f506e1a31b4f3e09b8caaa2463ef52c18",
      "results": [
        {
          "type": "warning",
          "category": "security",
          "message": "Console statement found (may leak sensitive info)",
          "file": "coverage/lcov-report/prettify.js",
          "line": 2,
          "range": {
            "startLine": 2,
            "startColumn": 1,
            "endLine": 2,
            "endColumn": 17568
          },
          "match": "console.warn(",
          "severity": "low",
          "ruleId": "SEC015",
          "confidence": 0.6,
          "fix": "Remove console statements before production",
          "fixEdits": [
            {
              "file": "coverage/lcov-report/prettify.js",
              "startLine": 2,
              "startColumn": 1,
              "endLine": 2,
              "endColumn": 17568,
              "replacement": ""
            }
          ]
        }
      ]
    },
    "coverage/lcov-report/block-navigation.js": {
      "hash": "cd8db34b1fbeb973354a93f8b4133c7c7eab34cdda9429a0434be91384783b7e",
      "results": []
    }
  }
}